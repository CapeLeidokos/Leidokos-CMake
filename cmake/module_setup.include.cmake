#  -*- mode: cmake -*-
# Leidokos-CMake -- An alternative build system that
#    enables building Kaleidoscope with CMake
# Copyright (C) 2017 noseglasses <shinynoseglasses@gmail.com>
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

function(setup_modules setup_cmake_file)

   file(GLOB dir_entries "${KALEIDOSCOPE_LIBRARIES_DIR}/*")

   set(module_blacklist
      "Leidokos-CMake")

   # Use a function to configure the module to 
   # let if have its own variable scope
   #
   function(include_module_setup file source_dir binary_dir)
      set(KALEIDOSCOPE_MODULE_SOURCE_DIR "${source_dir}")
      set(KALEIDOSCOPE_MODULE_BINARY_DIR "${binary_dir}")
      include("${file}")
      set(modules_additional_sources "${modules_additional_sources}" PARENT_SCOPE)
      set(modules_additional_headers "${modules_additional_headers}" PARENT_SCOPE)
   endfunction()

   set(module_build_base_dir "${CMAKE_BINARY_DIR}/modules")
   file(MAKE_DIRECTORY "${module_build_base_dir}")

   # This variable is used to collect additional sources generated by 
   # modules
   #
   set(modules_additional_sources "")
      
   # This variable is used to collect additional headers generated by 
   # modules
   #
   set(modules_additional_headers "")

   foreach(dir_entry ${dir_entries})

      if(NOT IS_DIRECTORY "${dir_entry}")
         continue()
      endif()
      
      set(module_setup_cmake_file "${dir_entry}/${setup_cmake_file}")
      
      if(NOT EXISTS "${module_setup_cmake_file}")
         continue()
      endif()
      
      get_filename_component(basename "${dir_entry}" NAME)
      
      list(FIND module_blacklist "${basename}" _index)
      if (${_index} GREATER -1)
         continue()
      endif()
      
      message("Configuring module ${basename}")
      
      set(binary_dir "${module_build_base_dir}/${basename}")
      
      file(MAKE_DIRECTORY "${binary_dir}")
      
      include_module_setup("${module_setup_cmake_file}" 
                           "${dir_entry}"
                           "${binary_dir}")
   endforeach()
endfunction()
